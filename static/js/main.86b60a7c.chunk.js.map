{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","components/Loader.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Cryptocurrencies.jsx","components/Exchanges.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Navbar","className","src","icon","size","Title","level","to","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Loader","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","useState","setTimeperiod","cryptoDetails","coin","console","log","DollarCircleOutlined","rank","NumberOutlined","volume","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","name","slug","defaultValue","placeholder","onChange","map","date","HTMLReactParser","description","links","link","type","href","target","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","gutter","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexof","coins","news","xs","sm","lg","hoverable","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","Cryptocurrencies","cryptoList","cryptos","setcryptos","searchTerm","setSearchTerm","useEffect","filteredData","filter","includes","e","currency","id","extra","iconUrl","Exchanges","App","exact","path","color","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.86b60a7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React from 'react'\nimport { Button,Typography,Avatar,Menu } from 'antd'\nimport { Link } from 'react-router-dom';\nimport {HomeOutlined,MoneyCollectOutlined,BulbOutlined,FundOutlined,MenuOutlined} from '@ant-design/icons';\nimport icon from '../images/cryptocurrency.png';\nconst Navbar = () => {\n    return (\n        <div className=\"nav-container\">\n            <div className=\"logo-container\">\n                <Avatar src={icon} size=\"large\"/>\n                <Typography.Title level={2} className=\"logo\">\n                    <Link to=\"/\">Cryptoverse</Link>\n                </Typography.Title>\n\n            </div>\n            <Menu theme=\"dark\">\n                <Menu.Item icon={<HomeOutlined/>}>\n                    <Link to=\"/\">Home</Link>\n                </Menu.Item>\n            </Menu>\n            <Menu theme=\"dark\">\n                <Menu.Item icon={<FundOutlined/>}>\n                    <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n                </Menu.Item>\n            </Menu>\n            <Menu theme=\"dark\">\n                <Menu.Item icon={<MoneyCollectOutlined/>}>\n                    <Link to=\"/exchanges\">Exchanges</Link>\n                </Menu.Item>\n            </Menu>\n            <Menu theme=\"dark\">\n                <Menu.Item icon={<BulbOutlined/>}>\n                    <Link to=\"/news\">News</Link>\n                </Menu.Item>\n            </Menu>\n            \n        </div>\n    )\n}\n\nexport default Navbar\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '28d1b71d0bmshe68b67313f78644p1a84aejsn8eed03e4300e'\n};\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl}),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;\n\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography,Row,Col,Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport {Cryptocurrencies,News} from '../components'\nconst {Title} = Typography;\nconst Homepage = () => {\n\n    const {data,isFetching} = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n\n    if(isFetching) return 'Loading...';\n\n    return (\n        <>\n           <Title level={2} className=\"heading\"> Global Crypto Stats</Title>\n           <Row>\n               <Col span={12}>\n                   <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/>\n                   <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/>\n                   <Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/>\n                   <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/>\n                   <Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/>\n                  \n               </Col>\n           </Row>\n           <div className=\"home-heading-container\">\n               <Title level={2} className=\"home-title\">Top 10  Cryptocurrencies in the World</Title>\n               <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\n           </div>\n           <Cryptocurrencies simplified/>\n           <div className=\"home-heading-container\">\n               <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n               <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\n           </div>\n           <News simplified/>\n        </>\n    )\n}\n\nexport default Homepage\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;","   \n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  {\n    console.log(data?.data?.coin);\n  }\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': '28d1b71d0bmshe68b67313f78644p1a84aejsn8eed03e4300e'\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl}),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImage =\n  \"http://coinrevolution.com/wp-content/uploads/202/06/cryptonews.jpg\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory: \"Cryptocurrency\",\n    count: simplified ? 6 : 12,\n  });\n  const {data} = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return \"Loading...\";\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexof(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map((coin)=><Option value={coin.name}>\n                {coin.name}\n            </Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)} ...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                  />\n\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n\n  const { data: cryptoList, isFetching } = useGetCryptosQuery(count);\n\n  const [cryptos, setcryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setcryptos(cryptoList?.data?.coins);\n    const filteredData = cryptoList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setcryptos(filteredData);\n  }, [cryptoList, searchTerm]);\n\n  if (isFetching) return \"Loading...\";\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link key={currency.id} to={`/coin/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from 'react'\n\nconst Exchanges = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Exchanges\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport \"./App.css\";\nimport { Navbar,Exchanges,Homepage,Cryptocurrencies,News,CryptoDetails } from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage/>\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges/>\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies/>\n              </Route>\n              <Route exact path=\"/coin/:coinId\">\n                <CryptoDetails/>\n              </Route>\n              <Route exact path=\"/news\">\n                <News/>\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n    \n      <div className=\"footer\">\n\n        <Typography.Title level={5} style={{color:'white',textAlign:'center'}}>\n          Cryptoverse <br/>\n          All rights reserved\n        </Typography.Title>\n        <Space>\n          <Link to='/'>Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\nexport default configureStore({\n    reducer:{\n        [cryptoApi.reducerPath]:cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]:cryptoNewsApi.reducer,\n    },\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport store from './app/store';\nimport {Provider} from 'react-redux';\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n    <App />\n    </Provider>\n   \n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}